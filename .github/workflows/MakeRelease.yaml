name: Make Release

on:
  repository_dispatch:
    types: [ make-release ]

jobs:
  build-release:
    runs-on:  windows-latest
    if:       ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      DOTNET_NOLOGO:                true
      DOTNET_CLI_TELEMETRY_OPTOUT:  true
    defaults:
      run:
        shell:  |
                pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"
            
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.event.client_payload.ref }}'

      - uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version:   6.0.x
          
      - name:   Create Staging Directory
        run:    mkdir "STAGING"

      - name:   Build Binary
        run:    dotnet publish WpfExporter -c Release -p:PublishProfile="WpfExporter/Properties/PublishProfiles/FolderProfile.pubxml"

      - name:   Stage Binary
        run:    foreach($file in $((dir "publish" | where {$_.extension -in ".exe"}).Fullname)){ mv "$file" "STAGING" }

      - name:   Upload Executable Artifact
        uses:   actions/upload-artifact@v3
        with:
          name: exe
          path: '${{github.workspace}}/STAGING/*'
          if-no-files-found: error

  create-release:
    needs: [ build-release ]
    runs-on:  ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path:  ${{github.workspace}}

      - name: 'Create Release'
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          tag_name: '${{ github.event.client_payload.tag }}'
          files: |
                 **/*.exe
